source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-5.R')
acuracy(prediction, testing$CompressiveStrength)
accuracy(prediction, testing$CompressiveStrength)
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-5.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
predict.all.tst
length(datacombined.tst)
length(datcombined.tst)
length(datcombined.tst)[1]
length(datcombined.tst)[,1]
length(datcombined.tst)[][1]
length(datcombined.tst)[1][]
length(datcombined.tst)
length(datcombined.tst)[1]
length(datcombined.tst)[[1]]
length(datcombined.tst)[[1],]
length(datcombined.tst)[[1][1]]
length(datcombined.tst[1])
length(datcombined.tst[,1])
length(predict.all.tst)
fit.combined
fit.combined[1]
fit.combined[2]
fit.combined[3]
fit.combined[4]
fit.combined[5]
fit.combined[6]
fit.combined[7]
fit.combined[8]
fit.combined[9]
predict.all.tst<-predict(fit.combined, newdata=datcombined.tst)
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
length(predict.all.tst)
length(datacombined.tst[1])
length(datcombined.tst[1])
length(datcombined.tst)
length(datcombined.tst[,1])
82*4
length(predict.rf.tst)
predict.all.tst<-predict(fit.combined, newdata=datcombined.tst)
predict.rf.tst <- predict(fit.rf, newdata=testing)
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
View(predict_rf_tst)
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
View(datcombined_tst)
View(datcombined_trn)
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
confusionMatrix(predict_all_tst, testing$diagnosis)
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
install.packages("MVA")
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-4.R')
accuracy(fcast, testing$visitsTumnblr)
accuracy(fcast, ts(testing$visitsTumnblr))
testing$visitsTumblr
tstest = ts(testing$visitsTumblr)
accuracy(fcast, tstest)
accuracy(fcast, testing$visitsTumnblr)
fcast1 <- predict(fit, newdata=tstest)
fcast1
fcast
h
confusionMatrix(fcast1, tstrain)
confusionMatrix(fcast1, testing$visitsTumblr)
fcast1[1]
fcast1[2]
confusionMatrix(fcast1[2], testing$visitsTumblr)
View(fcast)
View(testing)
remove(fcast1)
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-4.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2b.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2b.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2b.R')
accuracy(predict_tst_all, testing$diagnosis)
confusionMatrix(predict_tst_all, testing$diagnosis)
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2b.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2b.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2b.R')
source('C:/Users/Greg/Google Drive/G.Watson/R/Quiz4-2b.R')
warnings()
devtools::install_github("jennybc/googlesheets")
library("googlesheets")
suppressPackageStartupMessages(library("dplyr"))
gs_ls()
ms <- gs_ls()
ms
View(ms)
ms %>% glimpse()
mySht <- gs_key("1AdkA5_PPALOdkWu8DWYJUjCTuEQk_mu-pS7PpWEduaY")
View(mySht)
myAppointments <- mySht %>% get_via_csv()
View(myAppointments)
install.packages("clue")
install.packages("clues")
install.packages("clueR")
install.packages("tm")
install.packages("MeTA")
install.packages("meta")
install.packages("wordnet")
install.packages("openNLP")
install.packages("class")
install.packages("kernlab")
install.packages("tm.plugin.webmining")
install.packages("tm.plugin.mail")
install.packages("RcmdrPlugin.temis")
install.packages("RWeka")
install.packages("RKEA")
install.packages("gsubfn")
install.packages("SnowballC")
install.packages("Rstem")
install.packages("XML")
help read
read ?
d
?read
?read.csv
mydir <- "C:\\Users\\Greg\\Documents\\GitHub\\CapstoneSwiftkey\\en_US"
mydir <- mydir & "\\"
mydir <- mydir + "\\"
mydir <- "C:\\Users\\Greg\\Documents\\GitHub\\CapstoneSwiftkey\\en_US\\"
blogstxt <- read.table(mydir + "en_US.blogs.txt")
blogstxt <- read.table(paste(mydir, "en_US.blogs.txt", sep=""))
paste(mydir, "en_us.blogs.txt", sep="")
read.delim2(paste(mydir, "en_us.blogs.txt", sep=""), header=FALSE, sep="\n")
blogstxt <- read.delim2(paste(mydir, "en_us.blogs.txt", sep=""), header=FALSE, sep="\n")
head blogstxt
?head
head(blogstxt)
?sapply
?lapply
?mapply
?apply
?sapply
?tapply
blogstxt.len <- tapply(blogstxt, len)
blogstxt.len <- tapply(blogstxt, 0, len)
blogstxt.len <- tapply(blogstxt, 0, FUN = len)
blogstxt.len <- tapply(blogstxt, 0, FUN = "len")
blogstxt.len <- tapply(blogstxt, 0, FUN = len())
blogstxt.len <- tapply(blogstxt, 0, FUN = length())
blogstxt.len <- tapply(blogstxt, 0, FUN = length)
tapply(blogstxt, 0, FUN = length)
tapply(blogstxt, FUN = length)
tapply(blogstxt,1, FUN = length)
str(blogstxt)
fred <- function(FILE *const fin){}
?for
? for
for(c in 1:444439){}
for(r in 1:444439){c<-length(blogtxt[r,]); if(c>maxC){maxC<-c};maxC}
for(r in 1:444439){c<-length(blogstxt[r,]); if(c>maxC){maxC<-c};maxC}
maxC<-0
c<-0
for(r in 1:444439){c<-length(blogstxt[r,]); if(c>maxC){maxC<-c};maxC}
length(blogstxt[300,])
nchar(blogstxt[300,])
blogstxt[300,0]
blogstxt[300,]
nchar(blogstxt[300,])
char(blogstxt[300,])
tmp<-blogstxt[300,]
nchar(tmp)
nchar(as.string(tmp))
?as
nchar(as.char(tmp))
aschar
as.int
?nchar
nzchar(tmp)
length(tmp)
size(tmp)
tmp
char(tmp)
nchar("frd")
nchar(tmp[1])
nchar(tmp[,1])
tmp[1,]
tmp[1]
str(tmp)
tmp[0]
str(tmp)
str(blogstxt[300,])
str(blogstxt[299,])
str(blogstxt[1,])
blogstxt[1,]
nchar(blogstxt[1,])
length(blogstxt[1,])
blogstxt[1,1]
blogstxt[,1]
library("tm")
Corpus(DirSource("C:\\Users\\Greg\\Documents\\GitHub\\CapstoneSwiftkey\\en_US"),)
ovid <- (Corpus(DirSource("C:\\Users\\Greg\\Documents\\GitHub\\CapstoneSwiftkey\\en_US"),
readerControl=list(reader=readPlain, language="en", load=TRUE)))
)
dir("C:\\Users\\Greg\\Documents\\GitHub\\CapstoneSwiftkey\\en_US")
new("DirSource", LoDSupport=TRUE, FileList=dir("C:\\Users\\Greg\\Documents\\GitHub\\CapstoneSwiftkey\\en_US"), Position=0, DefaultReader=readPlain, Encoding="latin1")
library("tm")
txt<-system.file("C:\\Users\\Greg\\Documents\\GitHub\\CapstoneSwiftkey\\en_US\\en_US.blogs.txt", "txt", package="tm")
remove(ms)
remove(myAppointments)
remove(mySht)
remove(txt)
str(ovid)
blogstxt <- ovid["en_US.blogs.txt"]
blogstxt <- ovid[0,]
blogstxt <- ovid[,0]
blogstxt <- ovid[0]
ovid[1]
ovid[1,]
ID(ovid[[1]])
ovid[[1]]
ovid[[1,1]]
ovid[[2]]
ovid[[3]]
library("tm")
library("openNLP")
install.packages("openNLP")
library("openNLP")
install.packages("JavaGD")
library("JavaGD")
install.packages("rJava")
library("openNLP")
library("rJava")
install.packages("rJava")
library("rJava")
library("rJava")
library("openNLP")
library("JavaGD")
ovid[[3]]
ID(ovid[[3]])
str(ovid)
id(ovid[[1]])
ovid[[1]].id
author(ovid[[1]])
(ovid[[1]]).author
ovid.author
(ovid[[1]])$author
(ovid[[1]])$id
(ovid[[1]])$class
ovid[[1]]$if
ovid[[1]]$id
str(ovid[[1]])
ovid[[1]]$datetimestamp
ovid[[1]]$datetimestamp[1]
str(ovid[[1]]$datetimestamp)
ovid[[1]]$content
blogstxt <- ovid[[1]]$content
blogstxt[300,]
blogstxt[300]
nchar(blogstxt[300])
blogstxt.len <- nchar(blogstxt)
blogstxt.len
?max
max(blogstxt.len)
str(ovid)
newstxt <- ovid[[2]]$content
newstxt.len <- nchar(newstxt)
max(newstxt)
max(newstxt.len)
tmp <- "i love chocolate"
grep("*love*", tmp)
grep("*hate*", tmp)
str(ovid)
summary(ovid[[3]])
str(ovid[[3]])
sapply(ovid[[3]], grep("*love*"))
sapply(ovid[[3]], grep("*love*",1))
sapply(ovid[[3]], function(x) grep("*love*",x))
grep("*love*", ovid[[3]][247615])
grep("*love*", ovid[[3]][247616])
ovid[[3]][247616]
ovid[[3]]$content[247615]
grep("*love*", ovid[[3]]$content[247615])
love <- sum(sapply(ovid[[3]]$content, function(x) grep("*love*",x)))
love.lst <- sapply(ovid[[3]]$content, function(x) grep("*love*", x))
sum(love.lst)
length(love.lst)
hate.lst <- sapply(ovid[[3]]$content, function(x) grep("*hate*", x))
length(hate.lst)
grep("*love*", tmp)
grep("*love*", tmp)[1]
grep("*love*", tmp)[2]
grep("*love*", tmp)[0]
grep("*hate*", tmp)[0]
grep("*hate*", tmp)[1]
grep("*love*", tmp)[1]
hate.lst <- sapply(ovid[[3]]$content, function(x) if(isna(grep("*hate*", x)[1]){0}else{1})
?isna
hate.lst <- sapply(ovid[[3]]$content, function(x) if(is.na(grep("*hate*", x)[1])){0}else{1})
sum(hate.lst)
hate.lst <- sapply(ovid[[3]]$content, function(x) if(is.na(grep("*love*", x)[1])){0}else{1})
sum(hate.lst)
is.na(grep("*love*",tmp)){0}else{1}
is.na(grep("*love*",tmp))
if(is.na(grep("*love*",tmp))){0}else{1}
94153/389326
biostat <- sapply(ovid[[3]]$content, function(x) if(is.na(grep("*biostats*", x)[1])){""}else{x})
max(biostat)
chess <- sapply(ovid[[3]]$content, function(x) if(is.na(grep("A computer once beat me at chess, but it was no match for me at kickboxing", x)[1])){""}else{x})
chess[, !""]
chess[, !==""]
chess[, !=""]
str(chess)
View(chess)
chess[, x!=""]
chess[, x==""]
chess[, chess$x==""]
chess[, chess.x==""]
chess[, chess!=""]
chess[chess!=""]
chessx<-chess[chess!=""]
View(chessx)
love.lst <- grep ("love", ovid[[3]]$content)
hate.lst <- grep ("hate", ovid[[3]]$content)
length(love.lst)
length(hate.lst)
length(love.lst)/length(hate.lst)
length(ovid[[3]]$content)
remove(biostat)
remove(blostxt)
remove(blogstxt)
remove(blogstxt.len)
remove(chess)
remove(chessx)
remove(hate.lst)
remove(love.lst)
remove(newstxt)
remove(newstxt.len)
remove(ovid)
remove(tmp)
ovid <- (Corpus(DirSource("C:\\Users\\Greg\\Documents\\GitHub\\CapstoneSwiftkey\\en_US"),
readerControl=list(reader=readPlain, language="en", load=TRUE)))
answer2 <- length(ovid[[3]]$content)
blogtxt.len <- max(nchar(ovid[[1]]$content))
newstxt.len <- max(nchar(ovid[[2]]$content))
answer3 <- if(blogtxt.len > newstxt.len){blogtxt.len} else {newstxt.len}
answer4 <- length(grep ("love", ovid[[3]]$content)) / length(grep ("hate", ovid[[3]]$content))
answer5 <- grep("biostat", ovid[[3]]$content)
grep("biostat", ovid[[3]]$content)
ovid[[3]][answer5]
ovid[[3]]$content[answer5]
answer6 <- length(grep("A computer once beat me at chess, but it was no match for me at kickboxing", ovid[[3]]$content))
answer5 <- ovid[[3]]$content[grep("biostat", ovid[[3]]$content)]
q()
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
names(dtm1Docs)
names(dtm1Docs[[6]])
names(dtm1Docs[[6]][[2]])
names(dtm1Docs[[6]][2])
names(dtm1Docs[[6]][2][1])
names(dtm1Docs[[6]][[2]])
dtm1Docs[[6]][[2]]
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
v <- table(dtm1Docs[[6]][[2]])
View(v)
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
v[,1]
v[1]
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
install.packages("RColorBrewer")
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
display.brewer.pal(8, "Accent")
display.brewer.pal(8, "Dark2")
display.brewer.pal(8, "Set1")
display.brewer.pal(8, "Set2")
display.brewer.pal(8, "Set3")
display.brewer.pal(8, "Paired")
display.brewer.pal(8, "Accent")
display.brewer.pal(8, "Dark2")
?wordcloud
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
display.brewer.pal(8, "Dark2")
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
?wordcloud
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_TDM/skShiny')
setwd("~/GitHub/CapstoneSwiftkey/skCapstone_FINAL/skReport")
?layout
?par
?layout
layout(matrix(c(1,2,1,2), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,1,2), 1, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,1,2), 1, 1, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,1,2), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,1,2), 1, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,1,2), 3, 2, byrow = TRUE))
layout(matrix(c(1,2,1,2), 3, 3, byrow = TRUE))
layout(matrix(c(1,2,1,2), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,1,2,2), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,1,2,1), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,2,1), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,1,2), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,1,1,2), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,1,2), 2, 2, byrow = TRUE))
layout(matrix(c(1,2,2,2), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,2,2), 1, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,2,2), 2, 1, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,2,2), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,1,2), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,2,2), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,2,1), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,2,2), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,2,2,1,2,2,2), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,3,2), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,2,3), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))
layout.show()
layout(matrix(c(1,1,0,2), 2, 2, byrow=TRUE), respect=TRUE)
layout.show()
nf<-layout(matrix(c(1,1,0,2), 2, 2, byrow=TRUE), respect=TRUE)
layout.show(nf)
nf<-layout(matrix(c(1,2,1,2), 2, 2, byrow=TRUE), respect=TRUE)
layout.show(nf)
nf<-layout(matrix(c(1,1,1,1), 2, 2, byrow=TRUE), respect=TRUE)
layout.show(nf)
nf<-layout(matrix(c(1,2,1,2), 2, 2, byrow=TRUE), respect=TRUE)
layout.show(nf)
nf<-layout(matrix(c(1,2,1,2), 2, 1, byrow=TRUE), respect=TRUE)
layout.show(nf)
nf<-layout(matrix(c(1,2,1,2), 1, 1, byrow=TRUE), respect=TRUE)
layout.show(nf)
nf<-layout(matrix(c(1,2,1,2), 2, 2, byrow=TRUE), respect=TRUE)
layout.show(nf)
nf<-layout(matrix(c(1,2,1,2), 2, 2, byrow=TRUE), respect=TRUE)
layout.show(nf)
nf<-layout(matrix(c(1,2,1,2), 1, 1, byrow=TRUE), respect=TRUE)
layout.show(nf)
nf<-layout(matrix(c(1,2,1,2), 2, 1, byrow=TRUE), respect=TRUE)
layout.show(nf)
nf<-layout(matrix(c(1,2,1,2), 1, 2, byrow=TRUE), respect=TRUE)
layout.show(nf)
?par
nf <- layout(matrix(c(1,2,0,0),2,2,byrow=TRUE), widths=c(3,1), heights=c(1,2), TRUE)
layout.show(nf)
nf <- layout(matrix(c(1,2,0,0),2,2,byrow=TRUE), widths=c(2,1), heights=c(1,1), TRUE)
layout.show(nf)
nf <- layout(matrix(c(1,2),2,byrow=TRUE), widths=c(2,1), heights=c(1,1), TRUE)
layout.show(nf)
nf <- layout(matrix(c(1,2),2,2,byrow=TRUE), widths=c(2,1), heights=c(1,1), TRUE)
layout.show(nf)
setwd("~/GitHub/CapstoneSwiftkey/skCapstone_FINAL/skShiny_DTM")
shiny::runApp()
setwd("~/GitHub/CapstoneSwiftkey/skCapstone_FINAL/skShiny_DTM")
shiny::runApp()
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_FINAL/skShiny_NGRAM')
shiny::runApp('~/GitHub/CapstoneSwiftkey/skCapstone_FINAL/skShiny_NGRAM')
setwd("~/GitHub/CapstoneSwiftkey/skCapstone_FINAL/skReport")
